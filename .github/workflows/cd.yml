name: Continuous Deployment

on:
    push:
        branches:
            - master
            - develop
    pull_request:
        branches:
            - master
            - develop

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Checkout
              uses: actions/checkout@v2

            - name: Checkout protobuf repository
              uses: actions/checkout@v3
              with:
                  repository: ${{ github.repository_owner }}/protobuf-files
                  path: proto

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  tags: |
                      ${{ github.repository }}:latest
                      ${{ github.repository }}:${{ vars.VERSION }}
                  no-cache: true

    deploy:
        runs-on: ubuntu-latest
        needs: build-and-push
        env:
            VAULT_ADDR: http://127.0.0.1:8200
            CONTAINER_NAME: account-microservice
        steps:
            - name: Run docker image
              uses: appleboy/ssh-action@v1.2.0
              with:
                  host: ${{ vars.SSH_HOST }}
                  username: ${{ vars.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  passphrase: ${{ secrets.SSH_PASSPHRASE }}
                  script: |
                      export VAULT_ADDR=${{ env.VAULT_ADDR }}
                      vault kv get -format=json -mount="kv" "account-microservice" | \
                      jq -r '.data.data | to_entries[] | "\(.key)=\(.value)"' > .env
                      
                      docker pull ${{ github.repository }}:latest
                      docker stop ${{ env.CONTAINER_NAME }} || true
                      docker rm ${{ env.CONTAINER_NAME }} -f || true
                      docker run -d  \
                        -p 50051:50051 \
                        --env-file .env \
                        --name ${{ env.CONTAINER_NAME }} \
                        ${{ github.repository }}:latest
